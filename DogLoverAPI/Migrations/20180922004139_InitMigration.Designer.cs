// <auto-generated />
using DogLoverAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DogLoverAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180922004139_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DogLoverAPI.Models.Dislike", b =>
                {
                    b.Property<int>("DislikeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DogId");

                    b.Property<string>("OwnerUniqueId");

                    b.HasKey("DislikeId");

                    b.HasIndex("DogId");

                    b.ToTable("Dislikes");
                });

            modelBuilder.Entity("DogLoverAPI.Models.Dog", b =>
                {
                    b.Property<int>("DogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("Breed")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<float>("Height");

                    b.Property<string>("MainPicture")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("OwnerUniqueId")
                        .IsRequired();

                    b.Property<string>("Sex")
                        .IsRequired();

                    b.Property<float>("Weight");

                    b.HasKey("DogId");

                    b.ToTable("Dogs");
                });

            modelBuilder.Entity("DogLoverAPI.Models.DogPicture", b =>
                {
                    b.Property<int>("DogPictureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DogId");

                    b.Property<string>("PictureUrl")
                        .IsRequired();

                    b.HasKey("DogPictureId");

                    b.HasIndex("DogId");

                    b.ToTable("DogsPictures");
                });

            modelBuilder.Entity("DogLoverAPI.Models.Like", b =>
                {
                    b.Property<int>("LikeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DogId");

                    b.Property<string>("OwnerUniqueId")
                        .IsRequired();

                    b.HasKey("LikeId");

                    b.HasIndex("DogId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("DogLoverAPI.Models.Dislike", b =>
                {
                    b.HasOne("DogLoverAPI.Models.Dog", "Dog")
                        .WithMany("Dislikes")
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DogLoverAPI.Models.DogPicture", b =>
                {
                    b.HasOne("DogLoverAPI.Models.Dog", "Dog")
                        .WithMany("DogPictures")
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DogLoverAPI.Models.Like", b =>
                {
                    b.HasOne("DogLoverAPI.Models.Dog", "Dog")
                        .WithMany("Likes")
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
